# LuminaGrowX 🌱✨

LuminaGrowX ist eine modulare Software für den **ESP32-S3**, entwickelt als Herzstück eines vollautomatischen Grow-Systems – von der Anzucht bis zur Blüte.  
Das Projekt kombiniert moderne Sensorik, präzise Ansteuerung von Aktoren und eine flexible Architektur auf Basis eigener C++-Bibliotheken (`.h` / `.cpp`).  

Ziel ist ein System, das technisch leistungsfähig und dennoch einfach bedienbar ist – inspiriert vom klaren „Apple-like“ Design.

---

## ✨ Features

- **Plattform:** ESP32-S3 (Arduino / PlatformIO)
- **Modularer Aufbau:** eigene Bibliotheken für alle Komponenten (`lib/` + `src/`)
- **Sensorik:**  
  - Temperatur- und Luftfeuchtigkeit (SHT41)  
  - Distanz- / Füllstandsmessung (ToF-Sensor)  
  - Kapazitiver Bodenfeuchte-Sensor (geplant)  
- **Aktoren:**  
  - LED-Beleuchtung (10–100 % regelbar)  
  - Stepper-Motorsteuerung (z. B. TMC2209 mit StallGuard Homing)  
  - PWM-gesteuerte 12 V Lüfter (FanCtrl)  
  - GP8211 DAC (0–10 V Signal in % zur Steuerung externer Geräte)  
  - CO₂-Zufuhr (vorbereitet)  
- **Regelung:**  
  - VPD-basierte Klimasteuerung  
  - Flexible Regelstrategien (PID / PD vorgesehen)  
  - Definierte Phasenprofile für Tag/Nacht, Keimung, Wachstum und Blüte  
- **Kommunikation:**  
  - MQTT-Anbindung an Home Assistant (Discovery vorbereitet)  
  - Serielles Debugging über USB  
  - Webserver mit HTML/CSS Interface (Basis implementiert)  

---

## 📂 Projektstruktur

```plaintext
LuminaGrowX/
├─ lib/
│   ├─ fan_ctrl/        # PWM Lüftersteuerung
│   ├─ gp8211_ctrl/     # DAC-Ausgabe 0–10 V
│   ├─ sht41_ctrl/      # Temperatur & Luftfeuchte
│   ├─ stepper_ctrl/    # Schrittmotor + Homing
│   ├─ tof_ctrl/        # Time-of-Flight Sensor
│   └─ …                # weitere Module
├─ src/
│   └─ main.cpp         # zentrale Programm-Logik
├─ include/             # Header-Dateien
└─ README.md            # Projektbeschreibung
````

Jedes Modul ist eigenständig und lässt sich auch in anderen Projekten wiederverwenden.

---

## 🚀 Getting Started

### Voraussetzungen

* [PlatformIO](https://platformio.org/) mit VSCode
* ESP32-S3 DevKitC-1 oder eigenes Board mit ESP32-S3-WROOM
* Grundkenntnisse in Arduino/C++

### Installation

1. Repository klonen:

   ```bash
   git clone https://github.com/dein-user/LuminaGrowX.git
   ```
2. Projekt in VSCode mit PlatformIO öffnen.
3. Abhängigkeiten werden automatisch installiert.
4. `main.cpp` flashen und über **Seriellen Monitor** debuggen.

---

## ⚙️ Nutzung

* **Pins für Sensoren und Aktoren** werden in der `main.cpp` festgelegt.
* Jede Hardwarekomponente wird über ihre eigene Library initialisiert (`begin()`) und gesteuert.
* Konfiguration wie z. B. Grenzwerte für VPD oder LED-Intensität kann direkt im Code angepasst werden.

---

## 🌍 Roadmap

* Erweiterung der Regelstrategien (z. B. vollständige PID-Implementierung)
* Unterstützung für zusätzliche Sensoren (Bodenfeuchte, CO₂-Messung)
* Energiemanagement & Logging
* Tiefere Integration in Home Assistant (MQTT Discovery, Energie-Dashboard)
* Mobile Web-UI mit Live-Daten

---

## 📜 Lizenz

Dieses Projekt steht unter der **MIT-Lizenz**.
Freie Nutzung, Modifikation und Weitergabe sind erlaubt – ein Hinweis auf das Originalprojekt wird geschätzt.
